很好，现在已经快成功了，我再次运行了测试:
```bash
❯❯❯ make test                                                    (22s)[17:49:00]
flex -o lex.yy.c sysy.l
bison -d  sysy.y
gcc -g node.c sysy.tab.c lex.yy.c ir.c -o exe/sysy_complier
Segmentation fault (core dumped)
lli: lli: ll/func.ll: error: Could not open input file: No such file or directory

make: *** [Makefile:11：test] 错误 155
```
我调试了程序，我发现问题是发生在`ReturnStmt`中，
```c
 if (strcmp(node->name, "ReturnStmt") == 0)
    {
        if (node->children[0]->num_children > 0)
        {
            Value *ret_val = generate_code(node->children[0]->children[0]);
            char *final_ret_reg = ret_val->reg;

            if (strcmp(generator.current_func_ret_type, ret_val->type) != 0)
            {
                final_ret_reg = new_reg();
                if (strcmp(generator.current_func_ret_type, "float") == 0)
                    emit("\t%s = sitofp %s %s to float", final_ret_reg, ret_val->type, ret_val->reg);
                else
                    emit("\t%s = fptosi %s %s to i32", final_ret_reg, ret_val->type, ret_val->reg);
            }
            emit("\tret %s %s", generator.current_func_ret_type, final_ret_reg);
            if (final_ret_reg != ret_val->reg)
                free(final_ret_reg);
            freeValue(ret_val);
        }
        else
        {
            emit("\tret void");
        }
        generator.last_instr_is_terminator = 1;
        return NULL;
    }
```

在行
```
Value *ret_val = generate_code(node->children[0]->children[0]);
char *final_ret_reg = ret_val->reg;
```
`generate_code`函数返回的是空指针，导致下一行出现了解引用空指针的错误，最终导致`Segmentation fault (core dumped)`。

我检查了生成的AST没有问题，问题是出在`ir.c`中，请根据`ir.c`中`ReturnStmt`片段，分析错误的原因，并且给出修改建议